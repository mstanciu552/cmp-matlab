return {
	{ label = "Animated", insertText = "Animated()" },
	{ label = "BeginInvoke", insertText = "BeginInvoke()" },
	{ label = "ColorSpec", insertText = "ColorSpec()" },
	{ label = "Combine", insertText = "Combine()" },
	{ label = "DelaunayTri", insertText = "DelaunayTri()" },
	{ label = "EndInvoke", insertText = "EndInvoke()" },
	{ label = "Execute", insertText = "Execute()" },
	{ label = "Feval", insertText = "Feval()" },
	{ label = "FunctionTestCase", insertText = "FunctionTestCase()" },
	{ label = "GetCharArray", insertText = "GetCharArray()" },
	{ label = "GetFullMatrix", insertText = "GetFullMatrix()" },
	{ label = "GetVariable", insertText = "GetVariable()" },
	{ label = "GetWorkspaceData", insertText = "GetWorkspaceData()" },
	{ label = "GraphPlot", insertText = "GraphPlot()" },
	{ label = "H5.close", insertText = "H5.close()" },
	{ label = "H5.garbage_collect", insertText = "H5.garbage_collect()" },
	{ label = "H5.get_libversion", insertText = "H5.get_libversion()" },
	{ label = "H5.open", insertText = "H5.open()" },
	{ label = "H5.set_free_list_limits", insertText = "H5.set_free_list_limits()" },
	{ label = "H5A.close", insertText = "H5A.close()" },
	{ label = "H5A.create", insertText = "H5A.create()" },
	{ label = "H5A.delete", insertText = "H5A.delete()" },
	{ label = "H5A.get_info", insertText = "H5A.get_info()" },
	{ label = "H5A.get_name", insertText = "H5A.get_name()" },
	{ label = "H5A.get_space", insertText = "H5A.get_space()" },
	{ label = "H5A.get_type", insertText = "H5A.get_type()" },
	{ label = "H5A.iterate", insertText = "H5A.iterate()" },
	{ label = "H5A.open", insertText = "H5A.open()" },
	{ label = "H5A.open_by_idx", insertText = "H5A.open_by_idx()" },
	{ label = "H5A.open_by_name", insertText = "H5A.open_by_name()" },
	{ label = "H5A.read", insertText = "H5A.read()" },
	{ label = "H5A.write", insertText = "H5A.write()" },
	{ label = "H5D.close", insertText = "H5D.close()" },
	{ label = "H5D.create", insertText = "H5D.create()" },
	{ label = "H5D.get_access_plist", insertText = "H5D.get_access_plist()" },
	{ label = "H5D.get_create_plist", insertText = "H5D.get_create_plist()" },
	{ label = "H5D.get_offset", insertText = "H5D.get_offset()" },
	{ label = "H5D.get_space", insertText = "H5D.get_space()" },
	{ label = "H5D.get_space_status", insertText = "H5D.get_space_status()" },
	{ label = "H5D.get_storage_size", insertText = "H5D.get_storage_size()" },
	{ label = "H5D.get_type", insertText = "H5D.get_type()" },
	{ label = "H5D.open", insertText = "H5D.open()" },
	{ label = "H5D.read", insertText = "H5D.read()" },
	{ label = "H5D.set_extent", insertText = "H5D.set_extent()" },
	{ label = "H5D.vlen_get_buf_size", insertText = "H5D.vlen_get_buf_size()" },
	{ label = "H5D.write", insertText = "H5D.write()" },
	{ label = "H5DS.attach_scale", insertText = "H5DS.attach_scale()" },
	{ label = "H5DS.detach_scale", insertText = "H5DS.detach_scale()" },
	{ label = "H5DS.get_label", insertText = "H5DS.get_label()" },
	{ label = "H5DS.get_num_scales", insertText = "H5DS.get_num_scales()" },
	{ label = "H5DS.get_scale_name", insertText = "H5DS.get_scale_name()" },
	{ label = "H5DS.is_scale", insertText = "H5DS.is_scale()" },
	{ label = "H5DS.iterate_scales", insertText = "H5DS.iterate_scales()" },
	{ label = "H5DS.set_label", insertText = "H5DS.set_label()" },
	{ label = "H5DS.set_scale", insertText = "H5DS.set_scale()" },
	{ label = "H5E.clear", insertText = "H5E.clear()" },
	{ label = "H5E.get_major", insertText = "H5E.get_major()" },
	{ label = "H5E.get_minor", insertText = "H5E.get_minor()" },
	{ label = "H5E.walk", insertText = "H5E.walk()" },
	{ label = "H5F.close", insertText = "H5F.close()" },
	{ label = "H5F.create", insertText = "H5F.create()" },
	{ label = "H5F.flush", insertText = "H5F.flush()" },
	{ label = "H5F.get_access_plist", insertText = "H5F.get_access_plist()" },
	{ label = "H5F.get_create_plist", insertText = "H5F.get_create_plist()" },
	{ label = "H5F.get_filesize", insertText = "H5F.get_filesize()" },
	{ label = "H5F.get_freespace", insertText = "H5F.get_freespace()" },
	{ label = "H5F.get_info", insertText = "H5F.get_info()" },
	{ label = "H5F.get_mdc_config", insertText = "H5F.get_mdc_config()" },
	{ label = "H5F.get_mdc_hit_rate", insertText = "H5F.get_mdc_hit_rate()" },
	{ label = "H5F.get_mdc_size", insertText = "H5F.get_mdc_size()" },
	{ label = "H5F.get_name", insertText = "H5F.get_name()" },
	{ label = "H5F.get_obj_count", insertText = "H5F.get_obj_count()" },
	{ label = "H5F.get_obj_ids", insertText = "H5F.get_obj_ids()" },
	{ label = "H5F.is_hdf5", insertText = "H5F.is_hdf5()" },
	{ label = "H5F.mount", insertText = "H5F.mount()" },
	{ label = "H5F.open", insertText = "H5F.open()" },
	{ label = "H5F.reopen", insertText = "H5F.reopen()" },
	{ label = "H5F.set_mdc_config", insertText = "H5F.set_mdc_config()" },
	{ label = "H5F.unmount", insertText = "H5F.unmount()" },
	{ label = "H5G.close", insertText = "H5G.close()" },
	{ label = "H5G.create", insertText = "H5G.create()" },
	{ label = "H5G.get_info", insertText = "H5G.get_info()" },
	{ label = "H5G.open", insertText = "H5G.open()" },
	{ label = "H5I.dec_ref", insertText = "H5I.dec_ref()" },
	{ label = "H5I.get_file_id", insertText = "H5I.get_file_id()" },
	{ label = "H5I.get_name", insertText = "H5I.get_name()" },
	{ label = "H5I.get_ref", insertText = "H5I.get_ref()" },
	{ label = "H5I.get_type", insertText = "H5I.get_type()" },
	{ label = "H5I.inc_ref", insertText = "H5I.inc_ref()" },
	{ label = "H5I.is_valid", insertText = "H5I.is_valid()" },
	{ label = "H5L.copy", insertText = "H5L.copy()" },
	{ label = "H5L.create_external", insertText = "H5L.create_external()" },
	{ label = "H5L.create_hard", insertText = "H5L.create_hard()" },
	{ label = "H5L.create_soft", insertText = "H5L.create_soft()" },
	{ label = "H5L.delete", insertText = "H5L.delete()" },
	{ label = "H5L.exists", insertText = "H5L.exists()" },
	{ label = "H5L.get_info", insertText = "H5L.get_info()" },
	{ label = "H5L.get_name_by_idx", insertText = "H5L.get_name_by_idx()" },
	{ label = "H5L.get_val", insertText = "H5L.get_val()" },
	{ label = "H5L.iterate", insertText = "H5L.iterate()" },
	{ label = "H5L.iterate_by_name", insertText = "H5L.iterate_by_name()" },
	{ label = "H5L.move", insertText = "H5L.move()" },
	{ label = "H5L.visit", insertText = "H5L.visit()" },
	{ label = "H5L.visit_by_name", insertText = "H5L.visit_by_name()" },
	{ label = "H5ML.compare_values", insertText = "H5ML.compare_values()" },
	{ label = "H5ML.get_constant_names", insertText = "H5ML.get_constant_names()" },
	{ label = "H5ML.get_constant_value", insertText = "H5ML.get_constant_value()" },
	{ label = "H5ML.get_function_names", insertText = "H5ML.get_function_names()" },
	{ label = "H5ML.get_mem_datatype", insertText = "H5ML.get_mem_datatype()" },
	{ label = "H5ML.hoffset", insertText = "H5ML.hoffset()" },
	{ label = "H5ML.sizeof", insertText = "H5ML.sizeof()" },
	{ label = "H5O.close", insertText = "H5O.close()" },
	{ label = "H5O.copy", insertText = "H5O.copy()" },
	{ label = "H5O.get_comment", insertText = "H5O.get_comment()" },
	{ label = "H5O.get_comment_by_name", insertText = "H5O.get_comment_by_name()" },
	{ label = "H5O.get_info", insertText = "H5O.get_info()" },
	{ label = "H5O.link", insertText = "H5O.link()" },
	{ label = "H5O.open", insertText = "H5O.open()" },
	{ label = "H5O.open_by_idx", insertText = "H5O.open_by_idx()" },
	{ label = "H5O.set_comment", insertText = "H5O.set_comment()" },
	{ label = "H5O.set_comment_by_name", insertText = "H5O.set_comment_by_name()" },
	{ label = "H5O.visit", insertText = "H5O.visit()" },
	{ label = "H5O.visit_by_name", insertText = "H5O.visit_by_name()" },
	{ label = "H5P.all_filters_avail", insertText = "H5P.all_filters_avail()" },
	{ label = "H5P.close", insertText = "H5P.close()" },
	{ label = "H5P.close_class", insertText = "H5P.close_class()" },
	{ label = "H5P.copy", insertText = "H5P.copy()" },
	{ label = "H5P.create", insertText = "H5P.create()" },
	{ label = "H5P.equal", insertText = "H5P.equal()" },
	{ label = "H5P.exist", insertText = "H5P.exist()" },
	{ label = "H5P.fill_value_defined", insertText = "H5P.fill_value_defined()" },
	{ label = "H5P.get", insertText = "H5P.get()" },
	{ label = "H5P.get_alignment", insertText = "H5P.get_alignment()" },
	{ label = "H5P.get_alloc_time", insertText = "H5P.get_alloc_time()" },
	{ label = "H5P.get_attr_creation_order", insertText = "H5P.get_attr_creation_order()" },
	{ label = "H5P.get_attr_phase_change", insertText = "H5P.get_attr_phase_change()" },
	{ label = "H5P.get_btree_ratios", insertText = "H5P.get_btree_ratios()" },
	{ label = "H5P.get_char_encoding", insertText = "H5P.get_char_encoding()" },
	{ label = "H5P.get_chunk", insertText = "H5P.get_chunk()" },
	{ label = "H5P.get_chunk_cache", insertText = "H5P.get_chunk_cache()" },
	{ label = "H5P.get_class", insertText = "H5P.get_class()" },
	{ label = "H5P.get_class_name", insertText = "H5P.get_class_name()" },
	{ label = "H5P.get_class_parent", insertText = "H5P.get_class_parent()" },
	{ label = "H5P.get_copy_object", insertText = "H5P.get_copy_object()" },
	{ label = "H5P.get_create_intermediate_group", insertText = "H5P.get_create_intermediate_group()" },
	{ label = "H5P.get_driver", insertText = "H5P.get_driver()" },
	{ label = "H5P.get_dxpl_multi", insertText = "H5P.get_dxpl_multi()" },
	{ label = "H5P.get_edc_check", insertText = "H5P.get_edc_check()" },
	{ label = "H5P.get_external", insertText = "H5P.get_external()" },
	{ label = "H5P.get_external_count", insertText = "H5P.get_external_count()" },
	{ label = "H5P.get_family_offset", insertText = "H5P.get_family_offset()" },
	{ label = "H5P.get_fapl_core", insertText = "H5P.get_fapl_core()" },
	{ label = "H5P.get_fapl_family", insertText = "H5P.get_fapl_family()" },
	{ label = "H5P.get_fapl_multi", insertText = "H5P.get_fapl_multi()" },
	{ label = "H5P.get_fclose_degree", insertText = "H5P.get_fclose_degree()" },
	{ label = "H5P.get_fill_time", insertText = "H5P.get_fill_time()" },
	{ label = "H5P.get_fill_value", insertText = "H5P.get_fill_value()" },
	{ label = "H5P.get_filter", insertText = "H5P.get_filter()" },
	{ label = "H5P.get_filter_by_id", insertText = "H5P.get_filter_by_id()" },
	{ label = "H5P.get_gc_references", insertText = "H5P.get_gc_references()" },
	{ label = "H5P.get_hyper_vector_size", insertText = "H5P.get_hyper_vector_size()" },
	{ label = "H5P.get_istore_k", insertText = "H5P.get_istore_k()" },
	{ label = "H5P.get_layout", insertText = "H5P.get_layout()" },
	{ label = "H5P.get_libver_bounds", insertText = "H5P.get_libver_bounds()" },
	{ label = "H5P.get_link_creation_order", insertText = "H5P.get_link_creation_order()" },
	{ label = "H5P.get_link_phase_change", insertText = "H5P.get_link_phase_change()" },
	{ label = "H5P.get_mdc_config", insertText = "H5P.get_mdc_config()" },
	{ label = "H5P.get_meta_block_size", insertText = "H5P.get_meta_block_size()" },
	{ label = "H5P.get_multi_type", insertText = "H5P.get_multi_type()" },
	{ label = "H5P.get_nfilters", insertText = "H5P.get_nfilters()" },
	{ label = "H5P.get_nprops", insertText = "H5P.get_nprops()" },
	{ label = "H5P.get_sieve_buf_size", insertText = "H5P.get_sieve_buf_size()" },
	{ label = "H5P.get_size", insertText = "H5P.get_size()" },
	{ label = "H5P.get_sizes", insertText = "H5P.get_sizes()" },
	{ label = "H5P.get_small_data_block_size", insertText = "H5P.get_small_data_block_size()" },
	{ label = "H5P.get_sym_k", insertText = "H5P.get_sym_k()" },
	{ label = "H5P.get_userblock", insertText = "H5P.get_userblock()" },
	{ label = "H5P.get_version", insertText = "H5P.get_version()" },
	{ label = "H5P.isa_class", insertText = "H5P.isa_class()" },
	{ label = "H5P.iterate", insertText = "H5P.iterate()" },
	{ label = "H5P.modify_filter", insertText = "H5P.modify_filter()" },
	{ label = "H5P.remove_filter", insertText = "H5P.remove_filter()" },
	{ label = "H5P.set", insertText = "H5P.set()" },
	{ label = "H5P.set_alignment", insertText = "H5P.set_alignment()" },
	{ label = "H5P.set_alloc_time", insertText = "H5P.set_alloc_time()" },
	{ label = "H5P.set_attr_creation_order", insertText = "H5P.set_attr_creation_order()" },
	{ label = "H5P.set_attr_phase_change", insertText = "H5P.set_attr_phase_change()" },
	{ label = "H5P.set_btree_ratios", insertText = "H5P.set_btree_ratios()" },
	{ label = "H5P.set_char_encoding", insertText = "H5P.set_char_encoding()" },
	{ label = "H5P.set_chunk", insertText = "H5P.set_chunk()" },
	{ label = "H5P.set_chunk_cache", insertText = "H5P.set_chunk_cache()" },
	{ label = "H5P.set_copy_object", insertText = "H5P.set_copy_object()" },
	{ label = "H5P.set_create_intermediate_group", insertText = "H5P.set_create_intermediate_group()" },
	{ label = "H5P.set_deflate", insertText = "H5P.set_deflate()" },
	{ label = "H5P.set_dxpl_multi", insertText = "H5P.set_dxpl_multi()" },
	{ label = "H5P.set_edc_check", insertText = "H5P.set_edc_check()" },
	{ label = "H5P.set_external", insertText = "H5P.set_external()" },
	{ label = "H5P.set_family_offset", insertText = "H5P.set_family_offset()" },
	{ label = "H5P.set_fapl_core", insertText = "H5P.set_fapl_core()" },
	{ label = "H5P.set_fapl_family", insertText = "H5P.set_fapl_family()" },
	{ label = "H5P.set_fapl_log", insertText = "H5P.set_fapl_log()" },
	{ label = "H5P.set_fapl_multi", insertText = "H5P.set_fapl_multi()" },
	{ label = "H5P.set_fapl_sec2", insertText = "H5P.set_fapl_sec2()" },
	{ label = "H5P.set_fapl_split", insertText = "H5P.set_fapl_split()" },
	{ label = "H5P.set_fapl_stdio", insertText = "H5P.set_fapl_stdio()" },
	{ label = "H5P.set_fclose_degree", insertText = "H5P.set_fclose_degree()" },
	{ label = "H5P.set_fill_time", insertText = "H5P.set_fill_time()" },
	{ label = "H5P.set_fill_value", insertText = "H5P.set_fill_value()" },
	{ label = "H5P.set_filter", insertText = "H5P.set_filter()" },
	{ label = "H5P.set_fletcher32", insertText = "H5P.set_fletcher32()" },
	{ label = "H5P.set_gc_references", insertText = "H5P.set_gc_references()" },
	{ label = "H5P.set_hyper_vector_size", insertText = "H5P.set_hyper_vector_size()" },
	{ label = "H5P.set_istore_k", insertText = "H5P.set_istore_k()" },
	{ label = "H5P.set_layout", insertText = "H5P.set_layout()" },
	{ label = "H5P.set_libver_bounds", insertText = "H5P.set_libver_bounds()" },
	{ label = "H5P.set_link_creation_order", insertText = "H5P.set_link_creation_order()" },
	{ label = "H5P.set_link_phase_change", insertText = "H5P.set_link_phase_change()" },
	{ label = "H5P.set_mdc_config", insertText = "H5P.set_mdc_config()" },
	{ label = "H5P.set_meta_block_size", insertText = "H5P.set_meta_block_size()" },
	{ label = "H5P.set_multi_type", insertText = "H5P.set_multi_type()" },
	{ label = "H5P.set_nbit", insertText = "H5P.set_nbit()" },
	{ label = "H5P.set_scaleoffset", insertText = "H5P.set_scaleoffset()" },
	{ label = "H5P.set_shuffle", insertText = "H5P.set_shuffle()" },
	{ label = "H5P.set_sieve_buf_size", insertText = "H5P.set_sieve_buf_size()" },
	{ label = "H5P.set_sizes", insertText = "H5P.set_sizes()" },
	{ label = "H5P.set_small_data_block_size", insertText = "H5P.set_small_data_block_size()" },
	{ label = "H5P.set_sym_k", insertText = "H5P.set_sym_k()" },
	{ label = "H5P.set_userblock", insertText = "H5P.set_userblock()" },
	{ label = "H5R.create", insertText = "H5R.create()" },
	{ label = "H5R.dereference", insertText = "H5R.dereference()" },
	{ label = "H5R.get_name", insertText = "H5R.get_name()" },
	{ label = "H5R.get_obj_type", insertText = "H5R.get_obj_type()" },
	{ label = "H5R.get_region", insertText = "H5R.get_region()" },
	{ label = "H5S.close", insertText = "H5S.close()" },
	{ label = "H5S.copy", insertText = "H5S.copy()" },
	{ label = "H5S.create", insertText = "H5S.create()" },
	{ label = "H5S.create_simple", insertText = "H5S.create_simple()" },
	{ label = "H5S.extent_copy", insertText = "H5S.extent_copy()" },
	{ label = "H5S.get_select_bounds", insertText = "H5S.get_select_bounds()" },
	{ label = "H5S.get_select_elem_npoints", insertText = "H5S.get_select_elem_npoints()" },
	{ label = "H5S.get_select_elem_pointlist", insertText = "H5S.get_select_elem_pointlist()" },
	{ label = "H5S.get_select_hyper_blocklist", insertText = "H5S.get_select_hyper_blocklist()" },
	{ label = "H5S.get_select_hyper_nblocks", insertText = "H5S.get_select_hyper_nblocks()" },
	{ label = "H5S.get_select_npoints", insertText = "H5S.get_select_npoints()" },
	{ label = "H5S.get_select_type", insertText = "H5S.get_select_type()" },
	{ label = "H5S.get_simple_extent_dims", insertText = "H5S.get_simple_extent_dims()" },
	{ label = "H5S.get_simple_extent_ndims", insertText = "H5S.get_simple_extent_ndims()" },
	{ label = "H5S.get_simple_extent_npoints", insertText = "H5S.get_simple_extent_npoints()" },
	{ label = "H5S.get_simple_extent_type", insertText = "H5S.get_simple_extent_type()" },
	{ label = "H5S.is_simple", insertText = "H5S.is_simple()" },
	{ label = "H5S.offset_simple", insertText = "H5S.offset_simple()" },
	{ label = "H5S.select_all", insertText = "H5S.select_all()" },
	{ label = "H5S.select_elements", insertText = "H5S.select_elements()" },
	{ label = "H5S.select_hyperslab", insertText = "H5S.select_hyperslab()" },
	{ label = "H5S.select_none", insertText = "H5S.select_none()" },
	{ label = "H5S.select_valid", insertText = "H5S.select_valid()" },
	{ label = "H5S.set_extent_none", insertText = "H5S.set_extent_none()" },
	{ label = "H5S.set_extent_simple", insertText = "H5S.set_extent_simple()" },
	{ label = "H5T.array_create", insertText = "H5T.array_create()" },
	{ label = "H5T.close", insertText = "H5T.close()" },
	{ label = "H5T.commit", insertText = "H5T.commit()" },
	{ label = "H5T.committed", insertText = "H5T.committed()" },
	{ label = "H5T.copy", insertText = "H5T.copy()" },
	{ label = "H5T.create", insertText = "H5T.create()" },
	{ label = "H5T.detect_class", insertText = "H5T.detect_class()" },
	{ label = "H5T.enum_create", insertText = "H5T.enum_create()" },
	{ label = "H5T.enum_insert", insertText = "H5T.enum_insert()" },
	{ label = "H5T.enum_nameof", insertText = "H5T.enum_nameof()" },
	{ label = "H5T.enum_valueof", insertText = "H5T.enum_valueof()" },
	{ label = "H5T.equal", insertText = "H5T.equal()" },
	{ label = "H5T.get_array_dims", insertText = "H5T.get_array_dims()" },
	{ label = "H5T.get_array_ndims", insertText = "H5T.get_array_ndims()" },
	{ label = "H5T.get_class", insertText = "H5T.get_class()" },
	{ label = "H5T.get_create_plist", insertText = "H5T.get_create_plist()" },
	{ label = "H5T.get_cset", insertText = "H5T.get_cset()" },
	{ label = "H5T.get_ebias", insertText = "H5T.get_ebias()" },
	{ label = "H5T.get_fields", insertText = "H5T.get_fields()" },
	{ label = "H5T.get_inpad", insertText = "H5T.get_inpad()" },
	{ label = "H5T.get_member_class", insertText = "H5T.get_member_class()" },
	{ label = "H5T.get_member_index", insertText = "H5T.get_member_index()" },
	{ label = "H5T.get_member_name", insertText = "H5T.get_member_name()" },
	{ label = "H5T.get_member_offset", insertText = "H5T.get_member_offset()" },
	{ label = "H5T.get_member_type", insertText = "H5T.get_member_type()" },
	{ label = "H5T.get_member_value", insertText = "H5T.get_member_value()" },
	{ label = "H5T.get_native_type", insertText = "H5T.get_native_type()" },
	{ label = "H5T.get_nmembers", insertText = "H5T.get_nmembers()" },
	{ label = "H5T.get_norm", insertText = "H5T.get_norm()" },
	{ label = "H5T.get_offset", insertText = "H5T.get_offset()" },
	{ label = "H5T.get_order", insertText = "H5T.get_order()" },
	{ label = "H5T.get_pad", insertText = "H5T.get_pad()" },
	{ label = "H5T.get_precision", insertText = "H5T.get_precision()" },
	{ label = "H5T.get_sign", insertText = "H5T.get_sign()" },
	{ label = "H5T.get_size", insertText = "H5T.get_size()" },
	{ label = "H5T.get_strpad", insertText = "H5T.get_strpad()" },
	{ label = "H5T.get_super", insertText = "H5T.get_super()" },
	{ label = "H5T.get_tag", insertText = "H5T.get_tag()" },
	{ label = "H5T.insert", insertText = "H5T.insert()" },
	{ label = "H5T.is_variable_str", insertText = "H5T.is_variable_str()" },
	{ label = "H5T.lock", insertText = "H5T.lock()" },
	{ label = "H5T.open", insertText = "H5T.open()" },
	{ label = "H5T.pack", insertText = "H5T.pack()" },
	{ label = "H5T.set_cset", insertText = "H5T.set_cset()" },
	{ label = "H5T.set_ebias", insertText = "H5T.set_ebias()" },
	{ label = "H5T.set_fields", insertText = "H5T.set_fields()" },
	{ label = "H5T.set_inpad", insertText = "H5T.set_inpad()" },
	{ label = "H5T.set_norm", insertText = "H5T.set_norm()" },
	{ label = "H5T.set_offset", insertText = "H5T.set_offset()" },
	{ label = "H5T.set_order", insertText = "H5T.set_order()" },
	{ label = "H5T.set_pad", insertText = "H5T.set_pad()" },
	{ label = "H5T.set_precision", insertText = "H5T.set_precision()" },
	{ label = "H5T.set_sign", insertText = "H5T.set_sign()" },
	{ label = "H5T.set_size", insertText = "H5T.set_size()" },
	{ label = "H5T.set_strpad", insertText = "H5T.set_strpad()" },
	{ label = "H5T.set_tag", insertText = "H5T.set_tag()" },
	{ label = "H5T.vlen_create", insertText = "H5T.vlen_create()" },
	{ label = "H5Z.filter_avail", insertText = "H5Z.filter_avail()" },
	{ label = "H5Z.get_filter_info", insertText = "H5Z.get_filter_info()" },
	{ label = "ImageDatastore", insertText = "ImageDatastore()" },
	{ label = "Inf", insertText = "Inf()" },
	{ label = "KeyValueDatastore", insertText = "KeyValueDatastore()" },
	{ label = "KeyValueStore", insertText = "KeyValueStore()" },
	{ label = "LineSpec", insertText = "LineSpec()" },
	{ label = "MException", insertText = "MException()" },
	{ label = "MaximizeCommandWindow", insertText = "MaximizeCommandWindow()" },
	{ label = "MinimizeCommandWindow", insertText = "MinimizeCommandWindow()" },
	{ label = "NET", insertText = "NET()" },
	{ label = "NET.Assembly", insertText = "NET.Assembly()" },
	{ label = "NET.GenericClass", insertText = "NET.GenericClass()" },
	{ label = "NET.NetException", insertText = "NET.NetException()" },
	{ label = "NET.addAssembly", insertText = "NET.addAssembly()" },
	{ label = "NET.convertArray", insertText = "NET.convertArray()" },
	{ label = "NET.createArray", insertText = "NET.createArray()" },
	{ label = "NET.createGeneric", insertText = "NET.createGeneric()" },
	{ label = "NET.disableAutoRelease", insertText = "NET.disableAutoRelease()" },
	{ label = "NET.enableAutoRelease", insertText = "NET.enableAutoRelease()" },
	{ label = "NET.invokeGenericMethod", insertText = "NET.invokeGenericMethod()" },
	{ label = "NET.isNETSupported", insertText = "NET.isNETSupported()" },
	{ label = "NET.setStaticProperty", insertText = "NET.setStaticProperty()" },
	{ label = "NaN", insertText = "NaN()" },
	{ label = "NaT", insertText = "NaT()" },
	{ label = "PutCharArray", insertText = "PutCharArray()" },
	{ label = "PutFullMatrix", insertText = "PutFullMatrix()" },
	{ label = "PutWorkspaceData", insertText = "PutWorkspaceData()" },
	{ label = "Quit", insertText = "Quit()" },
	{ label = "RandStream", insertText = "RandStream()" },
	{ label = "RandStream.create", insertText = "RandStream.create()" },
	{ label = "RandStream.getGlobalStream", insertText = "RandStream.getGlobalStream()" },
	{ label = "RandStream.list", insertText = "RandStream.list()" },
	{ label = "RandStream.setGlobalStream", insertText = "RandStream.setGlobalStream()" },
	{ label = "Remove", insertText = "Remove()" },
	{ label = "RemoveAll", insertText = "RemoveAll()" },
	{ label = "Special", insertText = "Special()" },
	{ label = "TabularTextDatastore", insertText = "TabularTextDatastore()" },
	{ label = "Test", insertText = "Test()" },
	{ label = "TestResult", insertText = "TestResult()" },
	{ label = "TestSuite.run", insertText = "TestSuite.run()" },
	{ label = "Tiff", insertText = "Tiff()" },
	{ label = "Tiff.close", insertText = "Tiff.close()" },
	{ label = "Tiff.computeStrip", insertText = "Tiff.computeStrip()" },
	{ label = "Tiff.computeTile", insertText = "Tiff.computeTile()" },
	{ label = "Tiff.currentDirectory", insertText = "Tiff.currentDirectory()" },
	{ label = "Tiff.getTag", insertText = "Tiff.getTag()" },
	{ label = "Tiff.getTagNames", insertText = "Tiff.getTagNames()" },
	{ label = "Tiff.getVersion", insertText = "Tiff.getVersion()" },
	{ label = "Tiff.isTiled", insertText = "Tiff.isTiled()" },
	{ label = "Tiff.lastDirectory", insertText = "Tiff.lastDirectory()" },
	{ label = "Tiff.nextDirectory", insertText = "Tiff.nextDirectory()" },
	{ label = "Tiff.numberOfStrips", insertText = "Tiff.numberOfStrips()" },
	{ label = "Tiff.numberOfTiles", insertText = "Tiff.numberOfTiles()" },
	{ label = "Tiff.read", insertText = "Tiff.read()" },
	{ label = "Tiff.readEncodedStrip", insertText = "Tiff.readEncodedStrip()" },
	{ label = "Tiff.readEncodedTile", insertText = "Tiff.readEncodedTile()" },
	{ label = "Tiff.readRGBAImage", insertText = "Tiff.readRGBAImage()" },
	{ label = "Tiff.readRGBAStrip", insertText = "Tiff.readRGBAStrip()" },
	{ label = "Tiff.readRGBATile", insertText = "Tiff.readRGBATile()" },
	{ label = "Tiff.rewriteDirectory", insertText = "Tiff.rewriteDirectory()" },
	{ label = "Tiff.setDirectory", insertText = "Tiff.setDirectory()" },
	{ label = "Tiff.setSubDirectory", insertText = "Tiff.setSubDirectory()" },
	{ label = "Tiff.setTag", insertText = "Tiff.setTag()" },
	{ label = "Tiff.write", insertText = "Tiff.write()" },
	{ label = "Tiff.writeDirectory", insertText = "Tiff.writeDirectory()" },
	{ label = "Tiff.writeEncodedStrip", insertText = "Tiff.writeEncodedStrip()" },
	{ label = "Tiff.writeEncodedTile", insertText = "Tiff.writeEncodedTile()" },
	{ label = "TriRep", insertText = "TriRep()" },
	{ label = "TriScatteredInterp", insertText = "TriScatteredInterp()" },
	{ label = "ValueIterator", insertText = "ValueIterator()" },
	{ label = "VideoReader", insertText = "VideoReader()" },
	{ label = "VideoWriter", insertText = "VideoWriter()" },
	{ label = "abs", insertText = "abs()" },
	{ label = "accumarray", insertText = "accumarray()" },
	{ label = "acos", insertText = "acos()" },
	{ label = "acosd", insertText = "acosd()" },
	{ label = "acosh", insertText = "acosh()" },
	{ label = "acot", insertText = "acot()" },
	{ label = "acotd", insertText = "acotd()" },
	{ label = "acoth", insertText = "acoth()" },
	{ label = "acsc", insertText = "acsc()" },
	{ label = "acscd", insertText = "acscd()" },
	{ label = "acsch", insertText = "acsch()" },
	{ label = "actxGetRunningServer", insertText = "actxGetRunningServer()" },
	{ label = "actxcontrol", insertText = "actxcontrol()" },
	{ label = "actxcontrollist", insertText = "actxcontrollist()" },
	{ label = "actxcontrolselect", insertText = "actxcontrolselect()" },
	{ label = "actxserver", insertText = "actxserver()" },
	{ label = "add", insertText = "add()" },
	{ label = "addCause", insertText = "addCause()" },
	{ label = "addOptional", insertText = "addOptional()" },
	{ label = "addParamValue", insertText = "addParamValue()" },
	{ label = "addParameter", insertText = "addParameter()" },
	{ label = "addRequired", insertText = "addRequired()" },
	{ label = "addcats", insertText = "addcats()" },
	{ label = "addedge", insertText = "addedge()" },
	{ label = "addevent", insertText = "addevent()" },
	{ label = "addmulti", insertText = "addmulti()" },
	{ label = "addnode", insertText = "addnode()" },
	{ label = "addpath", insertText = "addpath()" },
	{ label = "addpoints", insertText = "addpoints()" },
	{ label = "addpref", insertText = "addpref()" },
	{ label = "addproperty", insertText = "addproperty()" },
	{ label = "addsample", insertText = "addsample()" },
	{ label = "addsampletocollection", insertText = "addsampletocollection()" },
	{ label = "addtodate", insertText = "addtodate()" },
	{ label = "addts", insertText = "addts()" },
	{ label = "adjacency", insertText = "adjacency()" },
	{ label = "airy", insertText = "airy()" },
	{ label = "align", insertText = "align()" },
	{ label = "alim", insertText = "alim()" },
	{ label = "all", insertText = "all()" },
	{ label = "allchild", insertText = "allchild()" },
	{ label = "alpha", insertText = "alpha()" },
	{ label = "alphaShape", insertText = "alphaShape()" },
	{ label = "alphaSpectrum", insertText = "alphaSpectrum()" },
	{ label = "alphaTriangulation", insertText = "alphaTriangulation()" },
	{ label = "alphamap", insertText = "alphamap()" },
	{ label = "amd", insertText = "amd()" },
	{ label = "ancestor", insertText = "ancestor()" },
	{ label = "and", insertText = "and()" },
	{ label = "angle", insertText = "angle()" },
	{ label = "animatedline", insertText = "animatedline()" },
	{ label = "annotation", insertText = "annotation()" },
	{ label = "ans", insertText = "ans()" },
	{ label = "any", insertText = "any()" },
	{ label = "append", insertText = "append()" },
	{ label = "area", insertText = "area()" },
	{ label = "array2table", insertText = "array2table()" },
	{ label = "arrayfun", insertText = "arrayfun()" },
	{ label = "asec", insertText = "asec()" },
	{ label = "asecd", insertText = "asecd()" },
	{ label = "asech", insertText = "asech()" },
	{ label = "asin", insertText = "asin()" },
	{ label = "asind", insertText = "asind()" },
	{ label = "asinh", insertText = "asinh()" },
	{ label = "assert", insertText = "assert()" },
	{ label = "assignin", insertText = "assignin()" },
	{ label = "atan", insertText = "atan()" },
	{ label = "atan2", insertText = "atan2()" },
	{ label = "atan2d", insertText = "atan2d()" },
	{ label = "atand", insertText = "atand()" },
	{ label = "atanh", insertText = "atanh()" },
	{ label = "audiodevinfo", insertText = "audiodevinfo()" },
	{ label = "audioinfo", insertText = "audioinfo()" },
	{ label = "audioplayer", insertText = "audioplayer()" },
	{ label = "audioread", insertText = "audioread()" },
	{ label = "audiorecorder", insertText = "audiorecorder()" },
	{ label = "audiowrite", insertText = "audiowrite()" },
	{ label = "aufinfo", insertText = "aufinfo()" },
	{ label = "auread", insertText = "auread()" },
	{ label = "auwrite", insertText = "auwrite()" },
	{ label = "aviinfo", insertText = "aviinfo()" },
	{ label = "axes", insertText = "axes()" },
	{ label = "axis", insertText = "axis()" },
	{ label = "balance", insertText = "balance()" },
	{ label = "bandwidth", insertText = "bandwidth()" },
	{ label = "bar", insertText = "bar()" },
	{ label = "bar3", insertText = "bar3()" },
	{ label = "bar3h", insertText = "bar3h()" },
	{ label = "barh", insertText = "barh()" },
	{ label = "baryToCart", insertText = "baryToCart()" },
	{ label = "barycentricToCartesian", insertText = "barycentricToCartesian()" },
	{ label = "base2dec", insertText = "base2dec()" },
	{ label = "beep", insertText = "beep()" },
	{ label = "bench", insertText = "bench()" },
	{ label = "besselh", insertText = "besselh()" },
	{ label = "besseli", insertText = "besseli()" },
	{ label = "besselj", insertText = "besselj()" },
	{ label = "besselk", insertText = "besselk()" },
	{ label = "bessely", insertText = "bessely()" },
	{ label = "beta", insertText = "beta()" },
	{ label = "betainc", insertText = "betainc()" },
	{ label = "betaincinv", insertText = "betaincinv()" },
	{ label = "betaln", insertText = "betaln()" },
	{ label = "between", insertText = "between()" },
	{ label = "bfsearch", insertText = "bfsearch()" },
	{ label = "bicg", insertText = "bicg()" },
	{ label = "bicgstab", insertText = "bicgstab()" },
	{ label = "bicgstabl", insertText = "bicgstabl()" },
	{ label = "bin2dec", insertText = "bin2dec()" },
	{ label = "bitand", insertText = "bitand()" },
	{ label = "bitcmp", insertText = "bitcmp()" },
	{ label = "bitget", insertText = "bitget()" },
	{ label = "bitmax", insertText = "bitmax()" },
	{ label = "bitnot", insertText = "bitnot()" },
	{ label = "bitor", insertText = "bitor()" },
	{ label = "bitset", insertText = "bitset()" },
	{ label = "bitshift", insertText = "bitshift()" },
	{ label = "bitxor", insertText = "bitxor()" },
	{ label = "blanks", insertText = "blanks()" },
	{ label = "blkdiag", insertText = "blkdiag()" },
	{ label = "boundary", insertText = "boundary()" },
	{ label = "boundaryFacets", insertText = "boundaryFacets()" },
	{ label = "box", insertText = "box()" },
	{ label = "break", insertText = "break()" },
	{ label = "brighten", insertText = "brighten()" },
	{ label = "brush", insertText = "brush()" },
	{ label = "bsxfun", insertText = "bsxfun()" },
	{ label = "builddocsearchdb", insertText = "builddocsearchdb()" },
	{ label = "builtin", insertText = "builtin()" },
	{ label = "bvp4c", insertText = "bvp4c()" },
	{ label = "bvp5c", insertText = "bvp5c()" },
	{ label = "bvpget", insertText = "bvpget()" },
	{ label = "bvpinit", insertText = "bvpinit()" },
	{ label = "bvpset", insertText = "bvpset()" },
	{ label = "bvpxtend", insertText = "bvpxtend()" },
	{ label = "caldays", insertText = "caldays()" },
	{ label = "caldiff", insertText = "caldiff()" },
	{ label = "calendar", insertText = "calendar()" },
	{ label = "calendarDuration", insertText = "calendarDuration()" },
	{ label = "callSoapService", insertText = "callSoapService()" },
	{ label = "calllib", insertText = "calllib()" },
	{ label = "calmonths", insertText = "calmonths()" },
	{ label = "calquarters", insertText = "calquarters()" },
	{ label = "calweeks", insertText = "calweeks()" },
	{ label = "calyears", insertText = "calyears()" },
	{ label = "camdolly", insertText = "camdolly()" },
	{ label = "cameratoolbar", insertText = "cameratoolbar()" },
	{ label = "camlight", insertText = "camlight()" },
	{ label = "camlookat", insertText = "camlookat()" },
	{ label = "camorbit", insertText = "camorbit()" },
	{ label = "campan", insertText = "campan()" },
	{ label = "campos", insertText = "campos()" },
	{ label = "camproj", insertText = "camproj()" },
	{ label = "camroll", insertText = "camroll()" },
	{ label = "camtarget", insertText = "camtarget()" },
	{ label = "camup", insertText = "camup()" },
	{ label = "camva", insertText = "camva()" },
	{ label = "camzoom", insertText = "camzoom()" },
	{ label = "cart2pol", insertText = "cart2pol()" },
	{ label = "cart2sph", insertText = "cart2sph()" },
	{ label = "cartToBary", insertText = "cartToBary()" },
	{ label = "cartesianToBarycentric", insertText = "cartesianToBarycentric()" },
	{ label = "cast", insertText = "cast()" },
	{ label = "cat", insertText = "cat()" },
	{ label = "categorical", insertText = "categorical()" },
	{ label = "categories", insertText = "categories()" },
	{ label = "caxis", insertText = "caxis()" },
	{ label = "cd", insertText = "cd()" },
	{ label = "cdf2rdf", insertText = "cdf2rdf()" },
	{ label = "cdfepoch", insertText = "cdfepoch()" },
	{ label = "cdfinfo", insertText = "cdfinfo()" },
	{ label = "cdflib.SetVarReservePercent", insertText = "cdflib.SetVarReservePercent()" },
	{ label = "cdflib.close", insertText = "cdflib.close()" },
	{ label = "cdflib.closeVar", insertText = "cdflib.closeVar()" },
	{ label = "cdflib.computeEpoch", insertText = "cdflib.computeEpoch()" },
	{ label = "cdflib.computeEpoch16", insertText = "cdflib.computeEpoch16()" },
	{ label = "cdflib.create", insertText = "cdflib.create()" },
	{ label = "cdflib.createAttr", insertText = "cdflib.createAttr()" },
	{ label = "cdflib.createVar", insertText = "cdflib.createVar()" },
	{ label = "cdflib.delete", insertText = "cdflib.delete()" },
	{ label = "cdflib.deleteAttr", insertText = "cdflib.deleteAttr()" },
	{ label = "cdflib.deleteAttrEntry", insertText = "cdflib.deleteAttrEntry()" },
	{ label = "cdflib.deleteAttrgEntry", insertText = "cdflib.deleteAttrgEntry()" },
	{ label = "cdflib.deleteVar", insertText = "cdflib.deleteVar()" },
	{ label = "cdflib.deleteVarRecords", insertText = "cdflib.deleteVarRecords()" },
	{ label = "cdflib.epoch16Breakdown", insertText = "cdflib.epoch16Breakdown()" },
	{ label = "cdflib.epochBreakdown", insertText = "cdflib.epochBreakdown()" },
	{ label = "cdflib.getAttrEntry", insertText = "cdflib.getAttrEntry()" },
	{ label = "cdflib.getAttrMaxEntry", insertText = "cdflib.getAttrMaxEntry()" },
	{ label = "cdflib.getAttrMaxgEntry", insertText = "cdflib.getAttrMaxgEntry()" },
	{ label = "cdflib.getAttrName", insertText = "cdflib.getAttrName()" },
	{ label = "cdflib.getAttrNum", insertText = "cdflib.getAttrNum()" },
	{ label = "cdflib.getAttrScope", insertText = "cdflib.getAttrScope()" },
	{ label = "cdflib.getAttrgEntry", insertText = "cdflib.getAttrgEntry()" },
	{ label = "cdflib.getCacheSize", insertText = "cdflib.getCacheSize()" },
	{ label = "cdflib.getChecksum", insertText = "cdflib.getChecksum()" },
	{ label = "cdflib.getCompression", insertText = "cdflib.getCompression()" },
	{ label = "cdflib.getCompressionCacheSize", insertText = "cdflib.getCompressionCacheSize()" },
	{ label = "cdflib.getConstantNames", insertText = "cdflib.getConstantNames()" },
	{ label = "cdflib.getConstantValue", insertText = "cdflib.getConstantValue()" },
	{ label = "cdflib.getCopyright", insertText = "cdflib.getCopyright()" },
	{ label = "cdflib.getFileBackward", insertText = "cdflib.getFileBackward()" },
	{ label = "cdflib.getFormat", insertText = "cdflib.getFormat()" },
	{ label = "cdflib.getLibraryCopyright", insertText = "cdflib.getLibraryCopyright()" },
	{ label = "cdflib.getLibraryVersion", insertText = "cdflib.getLibraryVersion()" },
	{ label = "cdflib.getMajority", insertText = "cdflib.getMajority()" },
	{ label = "cdflib.getName", insertText = "cdflib.getName()" },
	{ label = "cdflib.getNumAttrEntries", insertText = "cdflib.getNumAttrEntries()" },
	{ label = "cdflib.getNumAttrgEntries", insertText = "cdflib.getNumAttrgEntries()" },
	{ label = "cdflib.getNumAttributes", insertText = "cdflib.getNumAttributes()" },
	{ label = "cdflib.getNumgAttributes", insertText = "cdflib.getNumgAttributes()" },
	{ label = "cdflib.getReadOnlyMode", insertText = "cdflib.getReadOnlyMode()" },
	{ label = "cdflib.getStageCacheSize", insertText = "cdflib.getStageCacheSize()" },
	{ label = "cdflib.getValidate", insertText = "cdflib.getValidate()" },
	{ label = "cdflib.getVarAllocRecords", insertText = "cdflib.getVarAllocRecords()" },
	{ label = "cdflib.getVarBlockingFactor", insertText = "cdflib.getVarBlockingFactor()" },
	{ label = "cdflib.getVarCacheSize", insertText = "cdflib.getVarCacheSize()" },
	{ label = "cdflib.getVarCompression", insertText = "cdflib.getVarCompression()" },
	{ label = "cdflib.getVarData", insertText = "cdflib.getVarData()" },
	{ label = "cdflib.getVarMaxAllocRecNum", insertText = "cdflib.getVarMaxAllocRecNum()" },
	{ label = "cdflib.getVarMaxWrittenRecNum", insertText = "cdflib.getVarMaxWrittenRecNum()" },
	{ label = "cdflib.getVarName", insertText = "cdflib.getVarName()" },
	{ label = "cdflib.getVarNum", insertText = "cdflib.getVarNum()" },
	{ label = "cdflib.getVarNumRecsWritten", insertText = "cdflib.getVarNumRecsWritten()" },
	{ label = "cdflib.getVarPadValue", insertText = "cdflib.getVarPadValue()" },
	{ label = "cdflib.getVarRecordData", insertText = "cdflib.getVarRecordData()" },
	{ label = "cdflib.getVarReservePercent", insertText = "cdflib.getVarReservePercent()" },
	{ label = "cdflib.getVarSparseRecords", insertText = "cdflib.getVarSparseRecords()" },
	{ label = "cdflib.getVarsMaxWrittenRecNum", insertText = "cdflib.getVarsMaxWrittenRecNum()" },
	{ label = "cdflib.getVersion", insertText = "cdflib.getVersion()" },
	{ label = "cdflib.hyperGetVarData", insertText = "cdflib.hyperGetVarData()" },
	{ label = "cdflib.hyperPutVarData", insertText = "cdflib.hyperPutVarData()" },
	{ label = "cdflib.inquire", insertText = "cdflib.inquire()" },
	{ label = "cdflib.inquireAttr", insertText = "cdflib.inquireAttr()" },
	{ label = "cdflib.inquireAttrEntry", insertText = "cdflib.inquireAttrEntry()" },
	{ label = "cdflib.inquireAttrgEntry", insertText = "cdflib.inquireAttrgEntry()" },
	{ label = "cdflib.inquireVar", insertText = "cdflib.inquireVar()" },
	{ label = "cdflib.open", insertText = "cdflib.open()" },
	{ label = "cdflib.putAttrEntry", insertText = "cdflib.putAttrEntry()" },
	{ label = "cdflib.putAttrgEntry", insertText = "cdflib.putAttrgEntry()" },
	{ label = "cdflib.putVarData", insertText = "cdflib.putVarData()" },
	{ label = "cdflib.putVarRecordData", insertText = "cdflib.putVarRecordData()" },
	{ label = "cdflib.renameAttr", insertText = "cdflib.renameAttr()" },
	{ label = "cdflib.renameVar", insertText = "cdflib.renameVar()" },
	{ label = "cdflib.setCacheSize", insertText = "cdflib.setCacheSize()" },
	{ label = "cdflib.setChecksum", insertText = "cdflib.setChecksum()" },
	{ label = "cdflib.setCompression", insertText = "cdflib.setCompression()" },
	{ label = "cdflib.setCompressionCacheSize", insertText = "cdflib.setCompressionCacheSize()" },
	{ label = "cdflib.setFileBackward", insertText = "cdflib.setFileBackward()" },
	{ label = "cdflib.setFormat", insertText = "cdflib.setFormat()" },
	{ label = "cdflib.setMajority", insertText = "cdflib.setMajority()" },
	{ label = "cdflib.setReadOnlyMode", insertText = "cdflib.setReadOnlyMode()" },
	{ label = "cdflib.setStageCacheSize", insertText = "cdflib.setStageCacheSize()" },
	{ label = "cdflib.setValidate", insertText = "cdflib.setValidate()" },
	{ label = "cdflib.setVarAllocBlockRecords", insertText = "cdflib.setVarAllocBlockRecords()" },
	{ label = "cdflib.setVarBlockingFactor", insertText = "cdflib.setVarBlockingFactor()" },
	{ label = "cdflib.setVarCacheSize", insertText = "cdflib.setVarCacheSize()" },
	{ label = "cdflib.setVarCompression", insertText = "cdflib.setVarCompression()" },
	{ label = "cdflib.setVarInitialRecs", insertText = "cdflib.setVarInitialRecs()" },
	{ label = "cdflib.setVarPadValue", insertText = "cdflib.setVarPadValue()" },
	{ label = "cdflib.setVarSparseRecords", insertText = "cdflib.setVarSparseRecords()" },
	{ label = "cdflib.setVarsCacheSize", insertText = "cdflib.setVarsCacheSize()" },
	{ label = "cdfread", insertText = "cdfread()" },
	{ label = "cdfwrite", insertText = "cdfwrite()" },
	{ label = "ceil", insertText = "ceil()" },
	{ label = "cell", insertText = "cell()" },
	{ label = "cell2mat", insertText = "cell2mat()" },
	{ label = "cell2struct", insertText = "cell2struct()" },
	{ label = "cell2table", insertText = "cell2table()" },
	{ label = "celldisp", insertText = "celldisp()" },
	{ label = "cellfun", insertText = "cellfun()" },
	{ label = "cellplot", insertText = "cellplot()" },
	{ label = "cellstr", insertText = "cellstr()" },
	{ label = "cgs", insertText = "cgs()" },
	{ label = "char", insertText = "char()" },
	{ label = "checkcode", insertText = "checkcode()" },
	{ label = "checkin", insertText = "checkin()" },
	{ label = "checkout", insertText = "checkout()" },
	{ label = "chol", insertText = "chol()" },
	{ label = "cholupdate", insertText = "cholupdate()" },
	{ label = "circshift", insertText = "circshift()" },
	{ label = "circumcenter", insertText = "circumcenter()" },
	{ label = "circumcenters", insertText = "circumcenters()" },
	{ label = "cla", insertText = "cla()" },
	{ label = "clabel", insertText = "clabel()" },
	{ label = "class", insertText = "class()" },
	{ label = "classdef", insertText = "classdef()" },
	{ label = "clc", insertText = "clc()" },
	{ label = "clear", insertText = "clear()" },
	{ label = "clearpoints", insertText = "clearpoints()" },
	{ label = "clearvars", insertText = "clearvars()" },
	{ label = "clf", insertText = "clf()" },
	{ label = "clipboard", insertText = "clipboard()" },
	{ label = "clock", insertText = "clock()" },
	{ label = "closeFile", insertText = "closeFile()" },
	{ label = "closereq", insertText = "closereq()" },
	{ label = "cmopts", insertText = "cmopts()" },
	{ label = "cmpermute", insertText = "cmpermute()" },
	{ label = "cmunique", insertText = "cmunique()" },
	{ label = "colamd", insertText = "colamd()" },
	{ label = "colon", insertText = "colon()" },
	{ label = "colorbar", insertText = "colorbar()" },
	{ label = "colordef", insertText = "colordef()" },
	{ label = "colormap", insertText = "colormap()" },
	{ label = "colormapeditor", insertText = "colormapeditor()" },
	{ label = "colperm", insertText = "colperm()" },
	{ label = "comet", insertText = "comet()" },
	{ label = "comet3", insertText = "comet3()" },
	{ label = "commandhistory", insertText = "commandhistory()" },
	{ label = "commandwindow", insertText = "commandwindow()" },
	{ label = "compan", insertText = "compan()" },
	{ label = "compass", insertText = "compass()" },
	{ label = "complex", insertText = "complex()" },
	{ label = "computer", insertText = "computer()" },
	{ label = "cond", insertText = "cond()" },
	{ label = "condeig", insertText = "condeig()" },
	{ label = "condest", insertText = "condest()" },
	{ label = "coneplot", insertText = "coneplot()" },
	{ label = "conj", insertText = "conj()" },
	{ label = "conncomp", insertText = "conncomp()" },
	{ label = "containers.Map", insertText = "containers.Map()" },
	{ label = "continue", insertText = "continue()" },
	{ label = "contour", insertText = "contour()" },
	{ label = "contour3", insertText = "contour3()" },
	{ label = "contourc", insertText = "contourc()" },
	{ label = "contourf", insertText = "contourf()" },
	{ label = "contourslice", insertText = "contourslice()" },
	{ label = "contrast", insertText = "contrast()" },
	{ label = "conv", insertText = "conv()" },
	{ label = "conv2", insertText = "conv2()" },
	{ label = "convexHull", insertText = "convexHull()" },
	{ label = "convhull", insertText = "convhull()" },
	{ label = "convhulln", insertText = "convhulln()" },
	{ label = "convn", insertText = "convn()" },
	{ label = "copyHDU", insertText = "copyHDU()" },
	{ label = "copyfile", insertText = "copyfile()" },
	{ label = "copyobj", insertText = "copyobj()" },
	{ label = "corrcoef", insertText = "corrcoef()" },
	{ label = "cos", insertText = "cos()" },
	{ label = "cosd", insertText = "cosd()" },
	{ label = "cosh", insertText = "cosh()" },
	{ label = "cot", insertText = "cot()" },
	{ label = "cotd", insertText = "cotd()" },
	{ label = "coth", insertText = "coth()" },
	{ label = "countcats", insertText = "countcats()" },
	{ label = "cov", insertText = "cov()" },
	{ label = "cplxpair", insertText = "cplxpair()" },
	{ label = "cputime", insertText = "cputime()" },
	{ label = "createClassFromWsdl", insertText = "createClassFromWsdl()" },
	{ label = "createFile", insertText = "createFile()" },
	{ label = "createImg", insertText = "createImg()" },
	{ label = "createSoapMessage", insertText = "createSoapMessage()" },
	{ label = "createTbl", insertText = "createTbl()" },
	{ label = "criticalAlpha", insertText = "criticalAlpha()" },
	{ label = "cross", insertText = "cross()" },
	{ label = "csc", insertText = "csc()" },
	{ label = "cscd", insertText = "cscd()" },
	{ label = "csch", insertText = "csch()" },
	{ label = "csvread", insertText = "csvread()" },
	{ label = "csvwrite", insertText = "csvwrite()" },
	{ label = "ctranspose", insertText = "ctranspose()" },
	{ label = "cummax", insertText = "cummax()" },
	{ label = "cummin", insertText = "cummin()" },
	{ label = "cumprod", insertText = "cumprod()" },
	{ label = "cumsum", insertText = "cumsum()" },
	{ label = "cumtrapz", insertText = "cumtrapz()" },
	{ label = "curl", insertText = "curl()" },
	{ label = "customverctrl", insertText = "customverctrl()" },
	{ label = "cylinder", insertText = "cylinder()" },
	{ label = "daqread", insertText = "daqread()" },
	{ label = "daspect", insertText = "daspect()" },
	{ label = "datacursormode", insertText = "datacursormode()" },
	{ label = "datastore", insertText = "datastore()" },
	{ label = "datatipinfo", insertText = "datatipinfo()" },
	{ label = "date", insertText = "date()" },
	{ label = "datenum", insertText = "datenum()" },
	{ label = "dateshift", insertText = "dateshift()" },
	{ label = "datestr", insertText = "datestr()" },
	{ label = "datetick", insertText = "datetick()" },
	{ label = "datetime", insertText = "datetime()" },
	{ label = "datevec", insertText = "datevec()" },
	{ label = "day", insertText = "day()" },
	{ label = "days", insertText = "days()" },
	{ label = "dbclear", insertText = "dbclear()" },
	{ label = "dbcont", insertText = "dbcont()" },
	{ label = "dbdown", insertText = "dbdown()" },
	{ label = "dblquad", insertText = "dblquad()" },
	{ label = "dbmex", insertText = "dbmex()" },
	{ label = "dbquit", insertText = "dbquit()" },
	{ label = "dbstack", insertText = "dbstack()" },
	{ label = "dbstatus", insertText = "dbstatus()" },
	{ label = "dbstep", insertText = "dbstep()" },
	{ label = "dbstop", insertText = "dbstop()" },
	{ label = "dbtype", insertText = "dbtype()" },
	{ label = "dbup", insertText = "dbup()" },
	{ label = "dde23", insertText = "dde23()" },
	{ label = "ddeget", insertText = "ddeget()" },
	{ label = "ddensd", insertText = "ddensd()" },
	{ label = "ddesd", insertText = "ddesd()" },
	{ label = "ddeset", insertText = "ddeset()" },
	{ label = "deal", insertText = "deal()" },
	{ label = "deblank", insertText = "deblank()" },
	{ label = "dec2base", insertText = "dec2base()" },
	{ label = "dec2bin", insertText = "dec2bin()" },
	{ label = "dec2hex", insertText = "dec2hex()" },
	{ label = "decic", insertText = "decic()" },
	{ label = "deconv", insertText = "deconv()" },
	{ label = "deg2rad", insertText = "deg2rad()" },
	{ label = "degree", insertText = "degree()" },
	{ label = "del2", insertText = "del2()" },
	{ label = "delaunay", insertText = "delaunay()" },
	{ label = "delaunayTriangulation", insertText = "delaunayTriangulation()" },
	{ label = "delaunayn", insertText = "delaunayn()" },
	{ label = "delete", insertText = "delete()" },
	{ label = "deleteCol", insertText = "deleteCol()" },
	{ label = "deleteFile", insertText = "deleteFile()" },
	{ label = "deleteHDU", insertText = "deleteHDU()" },
	{ label = "deleteKey", insertText = "deleteKey()" },
	{ label = "deleteRecord", insertText = "deleteRecord()" },
	{ label = "deleteRows", insertText = "deleteRows()" },
	{ label = "deleteproperty", insertText = "deleteproperty()" },
	{ label = "delevent", insertText = "delevent()" },
	{ label = "delsample", insertText = "delsample()" },
	{ label = "delsamplefromcollection", insertText = "delsamplefromcollection()" },
	{ label = "demo", insertText = "demo()" },
	{ label = "depdir", insertText = "depdir()" },
	{ label = "depfun", insertText = "depfun()" },
	{ label = "det", insertText = "det()" },
	{ label = "details", insertText = "details()" },
	{ label = "detrend", insertText = "detrend()" },
	{ label = "deval", insertText = "deval()" },
	{ label = "dfsearch", insertText = "dfsearch()" },
	{ label = "diag", insertText = "diag()" },
	{ label = "dialog", insertText = "dialog()" },
	{ label = "diary", insertText = "diary()" },
	{ label = "diff", insertText = "diff()" },
	{ label = "diffuse", insertText = "diffuse()" },
	{ label = "digraph", insertText = "digraph()" },
	{ label = "dir", insertText = "dir()" },
	{ label = "discretize", insertText = "discretize()" },
	{ label = "disp", insertText = "disp()" },
	{ label = "display", insertText = "display()" },
	{ label = "distances", insertText = "distances()" },
	{ label = "dither", insertText = "dither()" },
	{ label = "divergence", insertText = "divergence()" },
	{ label = "dlmread", insertText = "dlmread()" },
	{ label = "dlmwrite", insertText = "dlmwrite()" },
	{ label = "dmperm", insertText = "dmperm()" },
	{ label = "doc", insertText = "doc()" },
	{ label = "docsearch", insertText = "docsearch()" },
	{ label = "dos", insertText = "dos()" },
	{ label = "dot", insertText = "dot()" },
	{ label = "double", insertText = "double()" },
	{ label = "dragrect", insertText = "dragrect()" },
	{ label = "drawnow", insertText = "drawnow()" },
	{ label = "dsearchn", insertText = "dsearchn()" },
	{ label = "duration", insertText = "duration()" },
	{ label = "dynamicprops", insertText = "dynamicprops()" },
	{ label = "echo", insertText = "echo()" },
	{ label = "echodemo", insertText = "echodemo()" },
	{ label = "edgeAttachments", insertText = "edgeAttachments()" },
	{ label = "edges", insertText = "edges()" },
	{ label = "edit", insertText = "edit()" },
	{ label = "eig", insertText = "eig()" },
	{ label = "eigs", insertText = "eigs()" },
	{ label = "ellipj", insertText = "ellipj()" },
	{ label = "ellipke", insertText = "ellipke()" },
	{ label = "ellipsoid", insertText = "ellipsoid()" },
	{ label = "empty", insertText = "empty()" },
	{ label = "enableNETfromNetworkDrive", insertText = "enableNETfromNetworkDrive()" },
	{ label = "enableservice", insertText = "enableservice()" },
	{ label = "end", insertText = "end" },
	{ label = "eomday", insertText = "eomday()" },
	{ label = "eps", insertText = "eps()" },
	{ label = "eq", insertText = "eq()" },
	{ label = "erf", insertText = "erf()" },
	{ label = "erfc", insertText = "erfc()" },
	{ label = "erfcinv", insertText = "erfcinv()" },
	{ label = "erfcx", insertText = "erfcx()" },
	{ label = "erfinv", insertText = "erfinv()" },
	{ label = "error", insertText = "error()" },
	{ label = "errorbar", insertText = "errorbar()" },
	{ label = "errordlg", insertText = "errordlg()" },
	{ label = "etime", insertText = "etime()" },
	{ label = "etree", insertText = "etree()" },
	{ label = "etreeplot", insertText = "etreeplot()" },
	{ label = "eval", insertText = "eval()" },
	{ label = "evalc", insertText = "evalc()" },
	{ label = "evalin", insertText = "evalin()" },
	{ label = "event.EventData", insertText = "event.EventData()" },
	{ label = "event.PropertyEvent", insertText = "event.PropertyEvent()" },
	{ label = "event.listener", insertText = "event.listener()" },
	{ label = "event.proplistener", insertText = "event.proplistener()" },
	{ label = "eventlisteners", insertText = "eventlisteners()" },
	{ label = "events", insertText = "events()" },
	{ label = "exceltime", insertText = "exceltime()" },
	{ label = "exifread", insertText = "exifread()" },
	{ label = "exist", insertText = "exist()" },
	{ label = "exit", insertText = "exit()" },
	{ label = "exp", insertText = "exp()" },
	{ label = "expint", insertText = "expint()" },
	{ label = "expm", insertText = "expm()" },
	{ label = "expm1", insertText = "expm1()" },
	{ label = "export2wsdlg", insertText = "export2wsdlg()" },
	{ label = "exportsetupdlg", insertText = "exportsetupdlg()" },
	{ label = "eye", insertText = "eye()" },
	{ label = "ezcontour", insertText = "ezcontour()" },
	{ label = "ezcontourf", insertText = "ezcontourf()" },
	{ label = "ezmesh", insertText = "ezmesh()" },
	{ label = "ezmeshc", insertText = "ezmeshc()" },
	{ label = "ezplot", insertText = "ezplot()" },
	{ label = "ezplot3", insertText = "ezplot3()" },
	{ label = "ezpolar", insertText = "ezpolar()" },
	{ label = "ezsurf", insertText = "ezsurf()" },
	{ label = "ezsurfc", insertText = "ezsurfc()" },
	{ label = "faceNormal", insertText = "faceNormal()" },
	{ label = "faceNormals", insertText = "faceNormals()" },
	{ label = "factor", insertText = "factor()" },
	{ label = "factorial", insertText = "factorial()" },
	{ label = "false", insertText = "false()" },
	{ label = "fclose", insertText = "fclose()" },
	{ label = "feather", insertText = "feather()" },
	{ label = "featureEdges", insertText = "featureEdges()" },
	{ label = "feof", insertText = "feof()" },
	{ label = "ferror", insertText = "ferror()" },
	{ label = "feval", insertText = "feval()" },
	{ label = "fewerbins", insertText = "fewerbins()" },
	{ label = "fft", insertText = "fft()" },
	{ label = "fft2", insertText = "fft2()" },
	{ label = "fftn", insertText = "fftn()" },
	{ label = "fftshift", insertText = "fftshift()" },
	{ label = "fftw", insertText = "fftw()" },
	{ label = "fgetl", insertText = "fgetl()" },
	{ label = "fgets", insertText = "fgets()" },
	{ label = "fieldnames", insertText = "fieldnames()" },
	{ label = "figure", insertText = "figure()" },
	{ label = "figurepalette", insertText = "figurepalette()" },
	{ label = "fileMode", insertText = "fileMode()" },
	{ label = "fileName", insertText = "fileName()" },
	{ label = "fileattrib", insertText = "fileattrib()" },
	{ label = "filebrowser", insertText = "filebrowser()" },
	{ label = "filemarker", insertText = "filemarker()" },
	{ label = "fileparts", insertText = "fileparts()" },
	{ label = "fileread", insertText = "fileread()" },
	{ label = "filesep", insertText = "filesep()" },
	{ label = "fill", insertText = "fill()" },
	{ label = "fill3", insertText = "fill3()" },
	{ label = "filter", insertText = "filter()" },
	{ label = "filter2", insertText = "filter2()" },
	{ label = "findall", insertText = "findall()" },
	{ label = "findedge", insertText = "findedge()" },
	{ label = "findfigs", insertText = "findfigs()" },
	{ label = "findgroups", insertText = "findgroups()" },
	{ label = "findnode", insertText = "findnode()" },
	{ label = "findobj", insertText = "findobj()" },
	{ label = "findstr", insertText = "findstr()" },
	{ label = "finish", insertText = "finish()" },
	{ label = "fitsdisp", insertText = "fitsdisp()" },
	{ label = "fitsinfo", insertText = "fitsinfo()" },
	{ label = "fitsread", insertText = "fitsread()" },
	{ label = "fitswrite", insertText = "fitswrite()" },
	{ label = "fix", insertText = "fix()" },
	{ label = "flintmax", insertText = "flintmax()" },
	{ label = "flip", insertText = "flip()" },
	{ label = "flipdim", insertText = "flipdim()" },
	{ label = "fliplr", insertText = "fliplr()" },
	{ label = "flipud", insertText = "flipud()" },
	{ label = "floor", insertText = "floor()" },
	{ label = "flow", insertText = "flow()" },
	{ label = "fminbnd", insertText = "fminbnd()" },
	{ label = "fminsearch", insertText = "fminsearch()" },
	{ label = "fopen", insertText = "fopen()" },
	{ label = "for", insertText = "for()" },
	{ label = "format", insertText = "format()" },
	{ label = "fplot", insertText = "fplot()" },
	{ label = "fprintf", insertText = "fprintf()" },
	{ label = "frame2im", insertText = "frame2im()" },
	{ label = "fread", insertText = "fread()" },
	{ label = "freeBoundary", insertText = "freeBoundary()" },
	{ label = "freqspace", insertText = "freqspace()" },
	{ label = "frewind", insertText = "frewind()" },
	{ label = "fscanf", insertText = "fscanf()" },
	{ label = "fseek", insertText = "fseek()" },
	{ label = "ftell", insertText = "ftell()" },
	{ label = "ftp", insertText = "ftp()" },
	{ label = "full", insertText = "full()" },
	{ label = "fullfile", insertText = "fullfile()" },
	{ label = "func2str", insertText = "func2str()" },
	{ label = "function", insertText = "function()" },
	{ label = "functions", insertText = "functions()" },
	{ label = "functiontests", insertText = "functiontests()" },
	{ label = "funm", insertText = "funm()" },
	{ label = "fwrite", insertText = "fwrite()" },
	{ label = "fzero", insertText = "fzero()" },
	{ label = "gallery", insertText = "gallery()" },
	{ label = "gamma", insertText = "gamma()" },
	{ label = "gammainc", insertText = "gammainc()" },
	{ label = "gammaincinv", insertText = "gammaincinv()" },
	{ label = "gammaln", insertText = "gammaln()" },
	{ label = "gca", insertText = "gca()" },
	{ label = "gcbf", insertText = "gcbf()" },
	{ label = "gcbo", insertText = "gcbo()" },
	{ label = "gcd", insertText = "gcd()" },
	{ label = "gcf", insertText = "gcf()" },
	{ label = "gcmr", insertText = "gcmr()" },
	{ label = "gco", insertText = "gco()" },
	{ label = "ge", insertText = "ge()" },
	{ label = "genpath", insertText = "genpath()" },
	{ label = "genvarname", insertText = "genvarname()" },
	{ label = "get", insertText = "get()" },
	{ label = "getAColParms", insertText = "getAColParms()" },
